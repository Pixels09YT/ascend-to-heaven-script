Can I disable animation while floating

--!strict

--- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")

--- Player and Character References
-- Ensure LocalPlayer and their Character are fully loaded before the script proceeds.
local LocalPlayer: Player = Players.LocalPlayer or Players.PlayerAdded:Wait()
local Character: Model = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()

-- HumanoidRootPart is essential for character movement.
local HumanoidRootPart: Part = Character:WaitForChild("HumanoidRootPart") :: Part
local Humanoid: Humanoid = Character:WaitForChild("Humanoid") :: Humanoid -- Needed for setCharacterCanCollide

--- GUI Elements
local ScreenGui = Instance.new("ScreenGui")
local ControlFrame = Instance.new("Frame")
local FloatToggleButton = Instance.new("TextButton")
local FloatSpeedLabel = Instance.new("TextLabel")
local FloatSpeedTextBox = Instance.new("TextBox")

--- Configuration Variables
local IS_FLOATING: boolean = false
local CURRENT_FLOAT_SPEED: number = 30 -- Default float speed

local MIN_FLOAT_SPEED: number = -200 -- Allow negative values for downward float
local MAX_FLOAT_SPEED: number = 200

--- Runtime Variables
local FloatBodyVelocity: BodyVelocity? = nil -- To control vertical movement

--- GUI Setup
do
    -- Configure the ScreenGui where your UI will live.
    ScreenGui.Name = "FloatControlGui"
    ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
    ScreenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global -- Ensures UI layers correctly

    -- Set up the main frame for your controls. This is the draggable part.
    ControlFrame.Name = "FloatControlPanel"
    ControlFrame.Parent = ScreenGui
    ControlFrame.Size = UDim2.new(0, 200, 0, 100)
    ControlFrame.Position = UDim2.new(0.5, -100, 0.8, -50) -- Position it near the bottom-center
    ControlFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
    ControlFrame.BackgroundTransparency = 0.1
    ControlFrame.BorderSizePixel = 2
    ControlFrame.BorderColor3 = Color3.fromRGB(0, 0, 255)
    ControlFrame.Active = true -- Important for the frame to receive input (and be draggable).
    ControlFrame.Draggable = true -- **MAIN PANEL IS DRAGGABLE**
    ControlFrame.Visible = true
    ControlFrame.ZIndex = 1 -- Ensures it appears above default UI elements

    -- Configure the "Float" toggle button.
    FloatToggleButton.Name = "FloatToggleButton"
    FloatToggleButton.Parent = ControlFrame
    FloatToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red (OFF) initially
    FloatToggleButton.Size = UDim2.new(1, 0, 0.4, 0)
    FloatToggleButton.Position = UDim2.new(0, 0, 0, 0)
    FloatToggleButton.Font = Enum.Font.SourceSans
    FloatToggleButton.Text = "Float: OFF"
    FloatToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    FloatToggleButton.TextSize = 20
    FloatToggleButton.Active = true -- Needs to be active to receive clicks
    FloatToggleButton.Draggable = false -- **BUTTON IS NOT DRAGGABLE**
    FloatToggleButton.Visible = true
    FloatToggleButton.ZIndex = 10 -- Above the panel's background

    -- Configure the "Float Speed" label.
    FloatSpeedLabel.Name = "FloatSpeedLabel"
    FloatSpeedLabel.Parent = ControlFrame
    FloatSpeedLabel.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
    FloatSpeedLabel.BackgroundTransparency = 0.5
    FloatSpeedLabel.Size = UDim2.new(1, 0, 0.25, 0)
    FloatSpeedLabel.Position = UDim2.new(0, 0, 0.4, 0)
    FloatSpeedLabel.Font = Enum.Font.SourceSans
    FloatSpeedLabel.Text = "Float Speed:"
    FloatSpeedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
    FloatSpeedLabel.TextSize = 16
    FloatSpeedLabel.TextXAlignment = Enum.TextXAlignment.Left
    FloatSpeedLabel.TextWrapped = true
    FloatSpeedLabel.Active = true
    FloatSpeedLabel.Draggable = false -- **LABEL IS NOT DRAGGABLE**
    FloatSpeedLabel.Visible = true
    FloatSpeedLabel.ZIndex = 2

    -- Configure the "Float Speed" textbox.
    FloatSpeedTextBox.Name = "FloatSpeedTextBox"
    FloatSpeedTextBox.Parent = ControlFrame
    FloatSpeedTextBox.BackgroundColor3 = Color3.fromRGB(90, 90, 90)
    FloatSpeedTextBox.BorderSizePixel = 1
    FloatSpeedTextBox.BorderColor3 = Color3.fromRGB(60,60,60)
    FloatSpeedTextBox.Size = UDim2.new(1, -20, 0, 25)
    FloatSpeedTextBox.Position = UDim2.new(0, 10, 0.65, 0)
    FloatSpeedTextBox.Font = Enum.Font.SourceSans
    FloatSpeedTextBox.Text = tostring(CURRENT_FLOAT_SPEED)
    FloatSpeedTextBox.TextColor3 = Color3.fromRGB(255, 255, 255)
    FloatSpeedTextBox.TextSize = 16
    FloatSpeedTextBox.TextXAlignment = Enum.TextXAlignment.Center
    FloatSpeedTextBox.ClearTextOnFocus = true
    FloatSpeedTextBox.Active = true
    FloatSpeedTextBox.Draggable = false -- **TEXTBOX IS NOT DRAGGABLE**
    FloatSpeedTextBox.Visible = true
    FloatSpeedTextBox.ZIndex = 2
end

--- Functions
-- Toggles character collision. Used for the 'noclip' part of floating.
local function setCharacterCanCollide(canCollide: boolean)
    for _, part in ipairs(Character:GetChildren()) do
        if part:IsA("BasePart") and part.CanCollide ~= canCollide then
            part.CanCollide = canCollide
        end
    end
    -- Ensure HumanoidRootPart's collision is also explicitly set.
    if HumanoidRootPart.CanCollide ~= canCollide then
        HumanoidRootPart.CanCollide = canCollide
    end
end

-- Initiates floating movement.
local function StartFloating()
    -- Re-check for HumanoidRootPart in case character respawns.
    if not HumanoidRootPart or not HumanoidRootPart.Parent then
        Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
        HumanoidRootPart = Character:WaitForChild("HumanoidRootPart") :: Part
        if not HumanoidRootPart or not HumanoidRootPart.Parent then return end -- Exit if still not found
    end

    -- Destroy existing BodyVelocity to prevent stacking.
    if FloatBodyVelocity and FloatBodyVelocity.Parent then
        FloatBodyVelocity:Destroy()
    end

    FloatBodyVelocity = Instance.new("BodyVelocity")
    FloatBodyVelocity.MaxForce = Vector3.new(0, math.huge, 0) -- Allow unlimited vertical force.
    FloatBodyVelocity.Velocity = Vector3.new(0, CURRENT_FLOAT_SPEED, 0)
    FloatBodyVelocity.Parent = HumanoidRootPart

    setCharacterCanCollide(false) -- Enable No-Clip when floating.
end

-- Stops floating movement.
local function StopFloating()
    if FloatBodyVelocity and FloatBodyVelocity.Parent then
        FloatBodyVelocity:Destroy()
        FloatBodyVelocity = nil
    end
    
    setCharacterCanCollide(true) -- Disable No-Clip (return to normal collision).
end

-- Toggles the floating state on/off.
local function ToggleFloat()
    IS_FLOATING = not IS_FLOATING
    FloatToggleButton.Text = IS_FLOATING and "Float: ON" or "Float: OFF"

    if IS_FLOATING then
        FloatToggleButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0) -- Green (ON)
        StartFloating()
    else
        FloatToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0) -- Red (OFF)
        StopFloating()
    end
end

-- Updates the float speed from the textbox input.
local function UpdateFloatSpeed(newSpeed: number)
    CURRENT_FLOAT_SPEED = math.clamp(newSpeed, MIN_FLOAT_SPEED, MAX_FLOAT_SPEED)
    FloatSpeedTextBox.Text = tostring(math.floor(CURRENT_FLOAT_SPEED)) -- Display whole number

    if IS_FLOATING and FloatBodyVelocity and FloatBodyVelocity.Parent then
        FloatBodyVelocity.Velocity = Vector3.new(0, CURRENT_FLOAT_SPEED, 0)
    elseif IS_FLOATING and not FloatBodyVelocity then
        -- If currently floating but BodyVelocity somehow disappeared, restart it.
        StartFloating()
    end
end

--- Connections
-- Connect the toggle button to its function.
FloatToggleButton.MouseButton1Click:Connect(ToggleFloat)

-- Handle input from the speed textbox.
FloatSpeedTextBox.FocusLost:Connect(function()
    local success, parsedNumber = pcall(tonumber, FloatSpeedTextBox.Text)
    if success and type(parsedNumber) == "number" then
        UpdateFloatSpeed(parsedNumber)
    else
        -- If input is invalid, revert textbox to current speed.
        FloatSpeedTextBox.Text = tostring(math.floor(CURRENT_FLOAT_SPEED))
    end
end)

--- Initial Setup
-- Set the initial text for the speed textbox and update the float speed.
FloatSpeedTextBox.Text = tostring(math.floor(CURRENT_FLOAT_SPEED))
UpdateFloatSpeed(CURRENT_FLOAT_SPEED)

-- Ensure the toggle button is red ("OFF") at the start.
FloatToggleButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
